While reading about this fascinating vulnerability I've stumbled upon a really interesting idea.

A while ago I've discovered seccomp, "is a computer security facility in the Linux kernel. seccomp allows a process to make a one-way transition into a secure state where it cannot make any system calls".

Thus, I've mixed these two ideas, and created a CTF challenge where the player after exploiting some vulnerabilities, will end up running arbitrary shellcode.

And here comes the fun part. The player, due to seccomp rules, can only perform open and read syscall. The final goal is to read the ./flag.txt file.

Thus, they must crash an x86-64 assembly shellcode which first opens the file, and then using time-based attack leak the content of the file.

The way they can do this is by comparing one byte at a time with the data they read from the file descriptor.

In case the character matches enter an infinite loop (jmp [rip]) which will make the program return SEGSIGV.
